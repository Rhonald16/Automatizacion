#--------------------------LISTAR TAREAS-----------------------------------------------------------------
#ansible-playbook obtener-hora.yml --list-task

#--------------------------APLCAR PLAYBOOK---------------------------------------------------------------
#ansible-playbook obtener-hora.yml -v -e "antigua_vrf=nombre_viejo nueva_vrf=nombre_nuevo"
# -e recibo parametros por command line
#--------------------------------------------------------------------------------------------------------
#ansible-playbook Reporte_OSPF.yam --tags="cisco"
#ansible-playbook Reporte_OSPF.yam --tags="huawei"
#----------------------VERIFICACIONES -----------------

---
- name: Playbook for tests
  hosts: NORMALIZACION
  connection: network_cli
  gather_facts: no
  serial: 1
  #vars: 
  
  #**************************************** GE *****************************************************
  
  tasks:

        - name: LISTAR INTERFACES GE
          junos_command:
            commands:
              -  'show interfaces descriptions | match ^ge-'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - GE


        - name: SALIDA INTERFACES GE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          ignore_errors: yes 
          tags:
            - GE
            
        - name: PARSEO INTERFACES GIGA ETHERNET
          set_fact: 
            inter_ge: "{{ inter_ge | default([])  + [ item | regex_search('(ge-[\\d\\/\\.]*)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('(ge-[\\d\\/\\.]*)') is not none
          tags:
            - GE
           
        - name: SALIDA PARSEO INTERFACES GIGA ETHERNET
          debug:
            msg:
            - "{{ inter_ge |unique |to_nice_json }}"
            - "{{ inter_ge |unique |count }}"
          tags:
            - GE
            
        
        - name: LISTAR CONFIGURACION INTERFACES GE
          junos_command:
            commands:
              - 'show configuration | display set | match {{item}}'
          register: configuracion
          retries: 2
          delay: 2
          until: configuracion is not failed
          with_items: "{{ inter_ge }}"
          tags:
            - GE
          
            
        - name: SALIDA CONFIGURACION INTERFACES GE
          debug:
            msg:
            - "{{ configuracion | to_nice_json }}"
          when:
            - " configuracion is defined "
          tags:
            - GE
          
        
        - name: CONFIGURACION VLAN
          set_fact:
            configuracion_GE: "{{ configuracion_GE | default([]) + [ item['stdout_lines'][0] |join('\n') ]}}" 
          with_items:
             - "{{configuracion['results']}}"
          when:
             - " item['stdout'][0] is not none"
          tags:
             - GE
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
             - "{{ configuracion_GE | to_nice_json }}"
          tags:
             - GE
             
        
        - name: EXPORTAR SALIDA INTERFACES GE
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_INT_GE.txt" 
            line: "{{ 'Interface' + ' ' + item[0]+ '\n' + item[1] }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_together:
            - "{{inter_ge}}"
            - "{{configuracion_GE}}"
          tags:
             - GE
            
            
#**************************************** XE *****************************************************
          
        - name: LISTAR INTERFACES XE
          junos_command:
            commands:
              -  'show interfaces descriptions | match ^xe-'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - XE


        - name: SALIDA INTERFACES XE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          ignore_errors: yes 
          tags:
            - XE
            
        - name: PARSEO INTERFACES XE
          set_fact: 
            inter_xe: "{{ inter_xe | default([])  + [ item | regex_search('(xe-[\\d\\/\\.]*)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('(xe-[\\d\\/\\.]*)') is not none
          tags:
            - XE
           
        - name: SALIDA PARSEO INTERFACES XE
          debug:
            msg:
            - "{{ inter_xe |unique |to_nice_json }}"
            - "{{ inter_xe |unique |count }}"
          tags:
            - XE
            
        
        - name: LISTAR CONFIGURACION INTERFACES GE
          junos_command:
            commands:
              - 'show configuration | display set | match {{item}}'
          register: configuracion
          retries: 2
          delay: 2
          until: configuracion is not failed
          with_items: "{{ inter_xe }}"
          tags:
            - XE
          
            
        - name: SALIDA CONFIGURACION INTERFACES GE
          debug:
            msg:
            - "{{ configuracion | to_nice_json }}"
          when:
            - " configuracion is defined "
          tags:
            - XE
          
        
        - name: CONFIGURACION VLAN
          set_fact:
            configuracion_XE: "{{ configuracion_XE | default([]) + [ item['stdout_lines'][0] |join('\n') ]}}" 
          with_items:
             - "{{configuracion['results']}}"
          when:
             - " item['stdout'][0] is not none"
          tags:
            - XE
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
             - "{{ configuracion_XE | to_nice_json }}"
          tags:
            - XE
             
        
        - name: EXPORTAR SALIDA DATOS
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_INT_XE.txt" 
            line: "{{ 'Interface' + ' ' + item[0]+ '\n' + item[1] }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_together:
            - "{{inter_xe}}"
            - "{{configuracion_XE}}"
          tags:
            - XE
            
#**************************************** AE *****************************************************


        - name: LISTAR INTERFACES AE
          junos_command:
            commands:
              -  'show interfaces descriptions | match ^ae'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - AE


        - name: SALIDA INTERFACES AE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          tags:
            - AE
            
        - name: PARSEO INTERFACES AE
          set_fact: 
            inter_ae: "{{ inter_ae | default([])  + [ item | regex_search('(ae\\d+[\\.\\d+]*)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('(ae\\d+[\\.\\d+]*)') is not none
          # tags:
            # - AE
            
        - name: SALIDA PARSEO INTERFACES AE
          debug:
            msg:
            - "{{ inter_ae |unique |to_nice_json }}"
            - "{{ inter_ae |unique |count }}"
          # tags:
            # - AE
            
        
        - name: LISTAR CONFIGURACION INTERFACES AE
          junos_command:
            commands:
              - 'show configuration | display set | match {{item}}'
          register: configuracion
          retries: 2
          delay: 2
          until: configuracion is not failed
          with_items: "{{ inter_ae }}"
          # tags:
            # - AE
          
            
        - name: SALIDA CONFIGURACION INTERFACES AE
          debug:
            msg:
            - "{{ configuracion | to_nice_json }}"
          when:
            - " configuracion is defined "
          # tags:
            # - AE
          
        
        - name: CONFIGURACION VLAN
          set_fact:
            configuracion_AE: "{{ configuracion_AE | default([]) + [ item['stdout_lines'][0] |join('\n') ]}}" 
          with_items:
             - "{{configuracion['results']}}"
          when:
             - " item['stdout'][0] is not none"
          # tags:
            # - AE
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
             - "{{ configuracion_AE | to_nice_json }}"
          # tags:
            # - AE
             
        
        - name: EXPORTAR SALIDA DATOS
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_INT_AE.txt" 
            line: "{{ 'Interface' + ' ' + item[0]+ '\n' + item[1] }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_together:
            - "{{inter_ae}}"
            - "{{configuracion_AE}}"
          # tags:
            # - AE
            

#**************************************** IRB *****************************************************


        - name: LISTAR INTERFACES IRB
          junos_command:
            commands:
              -  'show interfaces descriptions | match ^irb'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - IRB


        - name: SALIDA INTERFACES IRB
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          ignore_errors: yes 
          tags:
            - IRB
            
        - name: PARSEO INTERFACES IRB
          set_fact: 
            inter_irb: "{{ inter_irb | default([])  + [ item | regex_search('(irb[\\.\\d+]*)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('(irb[\\.\\d+]*)') is not none
          tags:
            - IRB
           
        - name: SALIDA PARSEO INTERFACES IRB
          debug:
            msg:
            - "{{ inter_irb |unique |to_nice_json }}"
            - "{{ inter_irb |unique |count }}"
          tags:
            - IRB
            
        
        - name: LISTAR CONFIGURACION INTERFACES IRB
          junos_command:
            commands:
              - 'show configuration | display set | match {{item}}'
          register: configuracion
          retries: 2
          delay: 2
          until: configuracion is not failed
          with_items: "{{ inter_irb }}"
          tags:
            - IRB
          
            
        - name: SALIDA CONFIGURACION INTERFACES IRB
          debug:
            msg:
            - "{{ configuracion | to_nice_json }}"
          when:
            - " configuracion is defined "
          tags:
            - IRB
          
        
        - name: CONFIGURACION INTERFACE
          set_fact:
            configuracion_IRB: "{{ configuracion_IRB | default([]) + [ item['stdout_lines'][0] |join('\n') ]}}" 
          with_items:
             - "{{configuracion['results']}}"
          when:
             - " item['stdout'][0] is not none"
          tags:
            - IRB
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
             - "{{ configuracion_IRB | to_nice_json }}"
          tags:
            - IRB
             
        
        - name: EXPORTAR SALIDA DATOS
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_IRB_AE.txt" 
            line: "{{ 'Interface' + ' ' + item[0]+ '\n' + item[1] }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_together:
            - "{{inter_irb}}"
            - "{{configuracion_IRB}}"
          tags:
            - IRB

#**************************************** AE *****************************************************

        
        # - name: MOSTRAR ARCHIVO DE DESPLIEGUE TWAMP {{inventory_hostname}}
          # debug:
            # msg: "{{ item }}"
          # with_items: "{{lookup('file', './output/Interface/interface.csv').splitlines()}}"
          # tags:
            # - prueba    
        
        
        - name: MOSTRAR ARCHIVO DE DESPLIEGUE TWAMP {{inventory_hostname}}
          set_fact:
            interface: "{{ interface | default ([]) + [item] }}"
          with_items: "{{lookup('file', './output/Interface/interface.csv').splitlines()}}"
          tags:
            - - prueba   
        
        - name: Salida Debug.
          debug:
            msg: "{{interface[:5] | to_nice_json}}"
          tags:
            - - prueba   
        

        # - name: MOSTRAR ARCHIVO DE DESPLIEGUE TWAMP {{inventory_hostname}}
          # set_fact:
            # interface: "{{ lookup('file', './output/Interface/interface.csv').sp}}"
          # tags:
            # - configuration
            
        # - name: SALIDA CONFIGURACION INTERFACES IRB
          # debug:
            # msg:
              # - "{{ interface }}"
              # - "{{ interface | type_debug}}"
            
          # tags:
            # - configuration
            
        - name: LISTAR CONFIGURACION INTERFACES IRB
          junos_command:
            commands:
              - 'show configuration | display set | match {{item}}'
          register: datos
          retries: 2
          delay: 2
          until: datos is not failed
          with_items: "{{ lookup('file', './output/Interface/interface.csv').splitlines()}}"
          tags:
            - configuration
          
            
        - name: SALIDA CONFIGURACION INTERFACES IRB
          debug:
            msg:
            - "{{ datos | to_nice_json }}"
          when:
            - " datos is defined "
          tags:
            - configuration
            
            
        - name: CONFIGURACION INTERFACE
          set_fact:
            configuracion: "{{ configuracion | default([]) + [ item['stdout_lines'][0] |join('\n') ]}}" 
          with_items:
             - "{{datos['results']}}"
          # when:
             # - " item['stdout'][0] is not none"
          tags:
            - configuration
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
             - "{{ configuracion | to_nice_json }}"
             - "{{ configuracion | type_debug }}"
          tags:
            - configuration
            
        - name: EXPORTAR SALIDA DATOS
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}conf.txt" 
            line: "{{ item }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_items:
            - "{{configuracion}}"
            # - "{{configuracion_IRB}}"
          tags:
            - configuration
            
#**************************************** AE VLAN *****************************************************            
            


        - name: LISTAR INTERFACES AE
          junos_command:
            commands:
              -  'show interfaces descriptions | match ^ae'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - AE-VLAN


        - name: SALIDA INTERFACES AE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          tags:
            - AE-VLAN
            
            
        - name: PARSEO INTERFACES AE VLAN
          set_fact: 
            inter_ae_vlan: "{{ inter_ae_vlan | default([])  + [ item | regex_search('(ae\\d+\\.\\d+)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('(ae\\d+\\.\\d+)') is not none
          tags:
            - AE-VLAN
           
        - name: SALIDA PARSEO INTERFACES AE.
          debug:
            msg:
            - "{{ inter_ae_vlan |unique |to_nice_json }}"
            - "{{ inter_ae_vlan |unique |count }}"
          tags:
            - AE-VLAN
            
        - name: LISTAR CONFIGURACION INTERFACES AE VLAN
          junos_command:
            commands:
              - 'show arp interface {{item}}'
          register: configuracion
          retries: 2
          delay: 2
          until: configuracion is not failed
          with_items: "{{ inter_ae_vlan }}"
          tags:
            - AE-VLAN
          
            
        - name: SALIDA CONFIGURACION INTERFACES AE VLAN
          debug:
            msg:
            - "{{ configuracion | to_nice_json }}"
          when:
            - " configuracion is defined "
          tags:
            - AE-VLAN
            
            
        - name: CONFIGURACION VLAN
          set_fact:
            configuracion_AE: "{{ configuracion_AE | default([]) + ['S/C' if('Interface' not in item['stdout_lines'][0][0]) else  item['stdout_lines'][0][1] ]}}" 
          with_items:
             - "{{configuracion['results']}}"
          when:
             - " item['stdout'][0] is not none"
          tags:
            - AE-VLAN
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
             - "{{ configuracion_AE | to_nice_json }}"
          tags:
            - AE-VLAN
            
            
        # - name: LISTAR AE VLAN Y CONF
          # debug:
            # msg: "{{item | regex_search('(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})') }}"
          # with_items:
             # - "{{configuracion_AE}}"
          # tags:
            # - AE-VLAN    
            
            
        # - name: LISTAR AE VLAN Y CONF
          # debug:
            # msg: "{{item[0] + ' ' + item[1] }}"
          # with_together:
            # - "{{inter_ae_vlan}}"
            # - "{{configuracion_AE}}"
          # tags:
            # - AE-VLAN
             
        
        - name: EXPORTAR SALIDA DATOS
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_AE_VLAN.txt" 
            line: "{{ 'Interface' + ' ' + item[0]+ '\n' + item[1] }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_together:
            - "{{inter_ae_vlan}}"
            - "{{configuracion_AE}}"
          tags:
            - AE-VLAN
            
            
          
#**************************************** L2 *****************************************************  




        - name: LISTAR INTERFACES AE
          junos_command:
            commands:
              -  'show interfaces descriptions | match L2'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - L2


        - name: SALIDA INTERFACES AE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          tags:
            - L2
            
            
        - name: PARSEO INTERFACES AE VLAN
          set_fact: 
            inter_L2: "{{ inter_L2 | default([])  + [ item | regex_search('(ae\\d+\\.\\d+)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('(ae\\d+\\.\\d+)') is not none
          tags:
            - L2
           
        - name: SALIDA PARSEO INTERFACES AE.
          debug:
            msg:
            - "{{ inter_L2 |unique |to_nice_json }}"
            - "{{ inter_L2 |unique |count }}"
          tags:
            - L2
            
        - name: LISTAR CONFIGURACION INTERFACES AE VLAN
          junos_command:
            commands:
              - 'show configuration | display set | match {{item}}'
          register: configuracion
          retries: 2
          delay: 2
          until: configuracion is not failed
          with_items: "{{ inter_L2 }}"
          tags:
            - L2
          
            
        - name: SALIDA CONFIGURACION INTERFACES AE VLAN
          debug:
            msg:
            - "{{ configuracion | to_nice_json }}"
          when:
            - " configuracion is defined "
          tags:
            - L2
            
        - name: variable con output crudo
          set_fact:
            output_crudo: "{{output_crudo | default([]) + [ item['stdout'][0]  ] }}"
          delegate_to: localhost
          with_items:
            - "{{configuracion['results']}}"
          tags:
            - L2
            
            
        - name: variable con output crudo en forma de lista
          set_fact:
            output_compilado: "{{ output_crudo | flatten  }}"
          delegate_to: localhost
          tags:
            - L2
      
        - name: SALIDA SERVICIOS EN VPN FLATTEN 
          debug:
            msg:
              - "{{output_compilado | to_nice_json }}"
              - "{{output_compilado | type_debug }}"
          tags:
            - L2
            
            
        - name: PARSEO INTERFACES AE VLAN
          set_fact: 
            inter_VPLS: "{{ inter_VPLS | default([])  + [ item | regex_search('([A-Z]+-[A-Z]+-\\d+)', '\\1') | first ] }}"  
          with_items: "{{ output_compilado }}"
          tags:
            - L2
           
        - name: SALIDA PARSEO INTERFACES AE.
          debug:
            msg:
            - "{{ inter_VPLS |to_nice_json }}"
            - "{{ inter_VPLS |count }}"
          tags:
            - L2
            
        - name: LISTAR CONFIGURACION INTERFACES AE VLAN
          junos_command:
            commands:
              - 'show vpls mac-table instance {{item}}'
          register: VPLS
          retries: 2
          delay: 2
          until: VPLS is not failed
          with_items: "{{ inter_VPLS }}"
          tags:
            - L2
          
            
        - name: SALIDA CONFIGURACION INTERFACES AE VLAN
          debug:
            msg:
            - "{{ VPLS | to_nice_json }}"
          when:
            - " configuracion is defined "
          tags:
            - L2
            
            
            
#xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


        - name: LISTAR INTERFACES GE - XE
          junos_command:
            commands:
              -  'show interfaces descriptions '
          register: Interface
          retries: 2
          delay: 2
          tags:
            - INTERFACES


        - name: SALIDA INTERFACES GE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          ignore_errors: yes 
          tags:
            - INTERFACES
            
        - name: PARSEO INTERFACES GIGA ETHERNET
          set_fact: 
            inter_ge: "{{ inter_ge | default([])  + [ item | regex_search('(^ge-[\\d\\/]+\\s+.+)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('^ge-[\\d\\/]+\\s+.+') is not none
          tags:
            - INTERFACES
           
        - name: SALIDA PARSEO INTERFACES GIGA ETHERNET
          debug:
            msg:
            - "{{ inter_ge |unique |to_nice_json }}"
            - "{{ inter_ge |unique |count }}"
          tags:
            - INTERFACES
            
            
        - name: PARSEO INTERFACES XE ETHERNET
          set_fact: 
            inter_xe: "{{ inter_xe | default([])  + [ item | regex_search('(^xe-[\\d\\/]+\\s+.+)', '\\1') | first ] }}"  
          with_items: "{{ Interface.stdout_lines[0] }}"
          when:
            - item | regex_search('^xe-[\\d\\/]+\\s+.+') is not none
          tags:
            - INTERFACES
           
        - name: SALIDA PARSEO INTERFACES XE ETHERNET
          debug:
            msg:
            - "{{ inter_xe |unique |to_nice_json }}"
            - "{{ inter_xe |unique |count }}"
          tags:
            - INTERFACES
            
        - name: INTERFACES GIGA ETHERNET Y XE ETHERNET
          set_fact: 
            inter_ge_xe: "{{ [inter_ge] + [inter_xe] }}"  
          tags:
            - INTERFACES
            
        - name: SALIDA PARSEO INTERFACES XE ETHERNET
          debug:
            msg:
            - "{{ inter_ge_xe |to_nice_json }}"
            - "{{ inter_ge_xe |count }}"
          tags:
            - INTERFACES
            
            
            
        - name: EXPORTAR SALIDA INTERFACES GE - XE
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_INT_GE_XE.txt" 
            line: "{{ item|join('\n') }}"
        # si no existe lo crea
            create: yes
        # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_items:
            - "{{inter_ge_xe}}"
          tags:
             - INTERFACES