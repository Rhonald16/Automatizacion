#--------------------------LISTAR TAREAS-----------------------------------------------------------------
#ansible-playbook obtener-hora.yml --list-task

#--------------------------APLCAR PLAYBOOK---------------------------------------------------------------
#ansible-playbook obtener-hora.yml -v -e "antigua_vrf=nombre_viejo nueva_vrf=nombre_nuevo"
# -e recibo parametros por command line
#--------------------------------------------------------------------------------------------------------
#ansible-playbook Reporte_OSPF.yam --tags="cisco"
#ansible-playbook Reporte_OSPF.yam --tags="huawei"
#----------------------VERIFICACIONES -----------------

---
- name: Playbook for tests
  hosts: NORMALIZACION
  connection: network_cli
  gather_facts: no
  serial: 1
  #vars: 
  
  #**************************************** GE *****************************************************
  
  tasks:

        - name: LISTAR INTERFACES GE
          ce_command:
            commands:
              -  'dis arp all | include D- | exclude Incomplete'
          register: Interface
          retries: 2
          delay: 2
          tags:
            - servicios


        - name: SALIDA INTERFACES GE
          debug:
            msg:
                - "{{  Interface | to_nice_json }}"
          tags:
            - servicios
            
        - name: vpn
          set_fact:
            servicios: "{{ servicios | default([]) + [ item | regex_search('([\\d\\.].+[a-zA-Z]-[a-zA-Z0-9]+$)', '\\1') | first ] }}" 
          with_items:
            - "{{Interface.stdout_lines[0]}}"
          when:
            - "item | regex_search('([\\d\\.].+[a-zA-Z]-[a-zA-Z0-9]+$)') is not none"
          tags:
            - servicios
      
    
        - name: SALIDA PARSEO SERVICIOS
          debug:
            msg:
              - "{{ servicios | to_nice_json }}"
          when:
              - " servicios is defined "
          tags:
            - servicios
            
        - name: ip
          set_fact:
            ip: "{{ ip | default([]) + [ item | regex_search('(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', '\\1') | first ] }}" 
          with_items:
            - "{{servicios}}"
          when:
            - "item | regex_search('(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})') is not none"
          tags:
            - servicios
      
    
        - name: SALIDA PARSEO IP
          debug:
            msg:
              - "{{ ip | to_nice_json }}"
              - "{{ ip |count }}"
          when:
              - " ip is defined "
          tags:
            - servicios
            
        - name: VPN 
          set_fact:
            vpn: "{{ vpn | default([]) + [ item | regex_search('([a-zA-Z]+-[a-zA-Z]+$|[a-zA-Z]+-[a-zA-Z]+-[a-zA-Z0-9]+$|[a-zA-Z]+-[a-zA-Z]+-[a-zA-Z]+-[a-zA-Z0-9]+$)', '\\1') |join('\n') ] }}" 
          with_items:
            - "{{servicios}}"
          when:
            - "item | regex_search('([a-zA-Z]+-[a-zA-Z]+$|[a-zA-Z]+-[a-zA-Z]+-[a-zA-Z0-9]+$|[a-zA-Z]+-[a-zA-Z]+-[a-zA-Z]+-[a-zA-Z0-9]+$)') is not none"
          tags:
            - servicios
      
    
        - name: SALIDA PARSEO VPN
          debug:
            msg:
              - "{{ vpn | to_nice_json }}"
              - "{{ vpn |count }}"
          when:
              - " vpn is defined "
          tags:
            - servicios
            
            
        - name: LISTAR PING A SERVICIOS
          ce_command:
            commands:
              -  'ping -c 2 -vpn-instance {{item[0]}} {{item[1]}}'
          register: ping
          retries: 2
          delay: 2
          with_together:
            - "{{vpn}}"
            - "{{ip}}"
          tags:
            - servicios


        - name: SALIDA INTERFACES GE
          debug:
            msg:
                - "{{ ping | to_nice_json }}"
          tags:
            - servicios
            
            
            
        - name: CONFIGURACION INTERFACE
          set_fact:
            configuracion: "{{ configuracion | default([]) + [ item['stdout_lines'][0][7]  ]}}" 
          with_items:
            - "{{ping['results']}}"
          when:
            - " item['stdout'][0] is not none"
          tags:
            - servicios
            
        
        - name: SALIDA CONFIGURACION VLAN 
          debug:
            msg:
              - "{{ configuracion | to_nice_json }}"
              # - "{{ configuracion | type_debug }}"
          tags:
            - servicios
            
        # - name: LISTAR IP VLAN RESULT 
          # debug:
            # msg: "{{item[0] + ' \n ' + item[1] }}"
          # with_together:
              # - "{{servicios[:3]}}"
              # - "{{configuracion[:3]}}"
          # tags:
            # - servicios
            
            
        - name: EXPORTAR SALIDA DATOS
          lineinfile:
            dest: "/home/u623994/Ansible/Rhonald/output/Interface/{{inventory_hostname}}_servicios_pos.txt" 
            line: "{{item[0] + ' \n ' + item[1] }}"
          # si no existe lo crea
            create: yes
          # permisos Lectura Escritura
            mode: '666'
            insertafter: EOF
          with_together:
              - "{{servicios}}"
              - "{{configuracion}}"
          tags:
            - servicios
          
                
                
                
       
          
        